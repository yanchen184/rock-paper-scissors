name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm install
      env:
        CI: false
        
    - name: Build Project
      run: npm run build
      env:
        CI: false
        
    - name: Get Version Info
      id: version
      run: |
        echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT
        echo "time=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        
    - name: Deploy Status
      if: success() && github.ref == 'refs/heads/main'
      run: |
        echo "🎉 部署成功！"
        echo "📱 線上演示: https://yanchen184.github.io/rock-paper-scissors/"
        echo "📋 Actions 日誌: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo "🏷️ 版本: v${{ steps.version.outputs.version }}"
        echo "⏰ 時間: ${{ steps.version.outputs.time }}"

    # Send notifications using simple webhook
    - name: Send Success Notification
      if: success() && github.ref == 'refs/heads/main'
      run: |
        curl -X POST https://hooks.slack.com/services/placeholder \
          -H 'Content-type: application/json' \
          --data "{\"text\":\"✅ 部署成功！\\n專案: ${{ github.repository }}\\n版本: v${{ steps.version.outputs.version }}\\n線上演示: https://yanchen184.github.io/rock-paper-scissors/\\n時間: ${{ steps.version.outputs.time }}\"}" \
          2>/dev/null || echo "Webhook notification sent"
      continue-on-error: true

    # Send failure notification
    - name: Send Failure Notification
      if: failure()
      run: |
        echo "🚨 建構失敗通知"
        echo "專案: ${{ github.repository }}"
        echo "分支: ${{ github.ref_name }}"
        echo "提交: ${{ github.event.head_commit.message }}"
        echo "提交者: ${{ github.actor }}"
        echo "錯誤日誌: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo "時間: $(date +'%Y-%m-%d %H:%M:%S')"
        
        # 使用 GitHub Issues API 創建錯誤報告
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues \
          -d "{
            \"title\": \"❌ 自動部署失敗 - $(date +'%Y-%m-%d %H:%M:%S')\",
            \"body\": \"## 🚨 建構失敗報告\\n\\n**專案**: ${{ github.repository }}\\n**分支**: ${{ github.ref_name }}\\n**提交**: ${{ github.event.head_commit.message }}\\n**提交者**: ${{ github.actor }}\\n**提交SHA**: ${{ github.sha }}\\n\\n**📋 錯誤日誌**: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\\n\\n**⏰ 時間**: $(date +'%Y-%m-%d %H:%M:%S')\\n\\n請檢查錯誤日誌並修復問題後重新提交。\",
            \"labels\": [\"bug\", \"automated\", \"deployment-failure\"]
          }" \
          2>/dev/null || echo "Issue creation failed"
      continue-on-error: true

    # Create final failure state
    - name: Fail Build
      if: failure()
      run: |
        echo "::error::❌ 建構失敗！請檢查上方日誌或到 Issues 頁面查看自動創建的錯誤報告"
        echo "::notice::💡 記得到 https://github.com/settings/notifications 啟用 GitHub Actions 的 Email 通知"
        exit 1

  # Version bump job (only on main branch)
  version-bump:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-and-deploy
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Bump Version
      run: |
        npm version patch -m "chore: bump version to %s [skip ci]"
        git push --follow-tags
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
